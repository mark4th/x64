

    
    X    X  XXXXXX  X    X
    X    X  X       X    X
     X  X   X       X    X
      XX    XXXXXX  XXXXXX
     X  X   X    X       X
    X    X  X    X       X
    X    X  XXXXXX       X

    Legal Crap
    ----------

    Section 5, paragraph 2 of the LGPL does not apply to x4.  Section 5,
    paragraph 2 is in direct contradiction with paragraph 9 of the preamble
    which states "We use this licence for certain libraries in order to
    permit linking those libraries """"INTO"""" non-free programs" (emphasis
    added).

    The whole purpose of using the LGPL (as stated elsewhere in the license)
    is to encourage the widest possible use of the library.  I therefore
    apply all of the LGPL to x4 except any sections that would force LGPL on
    programs created/compiled under x4.

    Some might say that x4 is not a library but a compiler.  This is true,
    it is a compiler, an interpreter and complete development and debugging
    environment.  It is also a library of routines that will compile your
    sources onto the end of itself allowing your code to use any of the
    functions therein.

    If you compile your sources on top of x4 and write out an executable,
    part of that executable is going to be the x4 kernel.  That part of your
    executable is LGPL and you must supply the sources to it on demand.  The
    part of the executable that is derived from your souces may have any
    damned license you want it to have and you can withhold all your sources
    if you so choose.  This is a non viral GPL.

    Modified versions of the x4 kernel however are STILL x4.

    Introduction
    ------------

    This compiler is a complete rewrite of my original Linux forth called x4
    which is a 32 bit direct threaded forth.  This one is a 64 bit subroutine
    threaded forth which means that instead of laying down execution tokens
    in the form of pointers to the code to be executed, we lay down direct
    x86_64 opcodes.  This could potentially allow for the inlining of forth
    primitives but this is not currently enabled.

    
    Borg Of x64 we are, Futile is resistance, Assimilated will you be!

    Installing
    ----------

    In order to build the x64 kernel you will need the GNU make utility and
    the NASM assembler.

    To make x64 run a make in the root of the source directory.  This will
    recurse into the src/kernel sub-directory and build the sources
    contained therein.  It will deposit an executable called kerenel right
    in the root directory of the sources.

        make [enter]

    Once you have an assembled kernel it is time to extend.  To do this you
    run the extend bash script as follows...

        ./extend

    This script makes the kernel interpret the Forth source file src/x64.f 
    which is mostly just a series of floads for each of the selected 
    extensions.  You can tweak this file by commenting out includes or 
    by adding new ones that you want built into the extended kernel.

    The last thing in x64.f is an fsave x64 which will make the kernel save 
    out a new copy of itself in the current directory to a file called x64.  
    An fsave is an implied 'bye' so if everything went well you should be at 
    the shell prompt once again.

    Type ./x64 and you should get a nice signon message.

    Contacting
    ----------

    If I am online then I am usually mark4th on irc in  #forth on 
    irc.freenode.net.  If you join that channel you will find a very active 
    channel which has large idle times.  If I am in there hang arround and I'll 
    notice you eventually.  Im usually trying to code too :)

    My email is mark4th -at- gmail -dot- com (shh!)

    Dedications
    -----------

    Without a doubt, x64 is dedicated to...

    Chuck Moore.  The inventor of this wonderful programming language.

    Laxen and Perry are a close second, they implemented the 83 standard
    which in some ways I consider superior to any other standard.

    My Father gets a mention here too.  He Introduced me to Forth :) 

    TCN (Thomas Novelli) Gets a very big dedication for getting my original
    32 bit x4 compiler to work (i knew nothing about Linux ASM coding :). 

    Tom Zimmer deserves credit - x64 is loosly based on FPC :)  Without FPC 
    I doubt I would be a forth coder.

    Linus T. Deserves credit for writing a true hackers operating system 
        -- Linux deserves a good Forth! --

